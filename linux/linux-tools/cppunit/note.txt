通用指针:
	typedef void (TestCase::*Method)();

1. 测试类继承
		class StringTest : public CppUnit::TestFixture{}
2. 
	class CPPUNIT_API TestFixture
	{
	public:
	  virtual ~TestFixture() {};

	  //! \brief Set up context before running a test.
	  virtual void setUp() {};

	  //! Clean up after the test run.
	  virtual void tearDown() {};
	};

3. 关键点:
	//class CPPUNIT_API TestCase : public TestLeaf,public TestFixture {}
	/*
//根据测试类，生成一个对应的模板类，统一代理测试方法的调用.
template <class Fixture>
class TestCaller : public TestCase
{ 
  typedef void (Fixture::*TestMethod)();
	// ...
}
*/


	  if ( result->protect( TestCaseMethodFunctor( this, &TestCase::setUp ),
	                        this,
	                       "setUp() failed" ) )
	  {
	    result->protect( TestCaseMethodFunctor( this, &TestCase::runTest ),
	                     this );
	  }
		//typedef void (TestCase::*Method)();
	  result->protect( TestCaseMethodFunctor( this, &TestCase::tearDown ),
	                   this,
	                   "tearDown() failed" );

